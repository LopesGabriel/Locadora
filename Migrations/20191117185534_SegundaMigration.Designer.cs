// <auto-generated />
using System;
using Locadora.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Locadora.Migrations
{
    [DbContext(typeof(LocadoraContext))]
    [Migration("20191117185534_SegundaMigration")]
    partial class SegundaMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Locadora.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("nome");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Locadora.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Endereco");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Locadora.Models.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Ano");

                    b.Property<int?>("CategoriaId");

                    b.Property<int>("Duracao");

                    b.Property<int?>("LocacaoId");

                    b.Property<int?>("ProdutoraId");

                    b.Property<string>("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("LocacaoId");

                    b.HasIndex("ProdutoraId");

                    b.ToTable("Filme");
                });

            modelBuilder.Entity("Locadora.Models.Locacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ClienteId");

                    b.Property<DateTime>("DataEntrega");

                    b.Property<DateTime>("DataLocacao");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Locacao");
                });

            modelBuilder.Entity("Locadora.Models.Produtora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Produtora");
                });

            modelBuilder.Entity("Locadora.Models.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ClienteId");

                    b.Property<string>("Numero");

                    b.Property<int>("TipoTelefone");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("Locadora.Models.Filme", b =>
                {
                    b.HasOne("Locadora.Models.Categoria", "Categoria")
                        .WithMany("Filmes")
                        .HasForeignKey("CategoriaId");

                    b.HasOne("Locadora.Models.Locacao")
                        .WithMany("Filmes")
                        .HasForeignKey("LocacaoId");

                    b.HasOne("Locadora.Models.Produtora", "Produtora")
                        .WithMany("Filmes")
                        .HasForeignKey("ProdutoraId");
                });

            modelBuilder.Entity("Locadora.Models.Locacao", b =>
                {
                    b.HasOne("Locadora.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("Locadora.Models.Telefone", b =>
                {
                    b.HasOne("Locadora.Models.Cliente", "Cliente")
                        .WithMany("Telefones")
                        .HasForeignKey("ClienteId");
                });
#pragma warning restore 612, 618
        }
    }
}
